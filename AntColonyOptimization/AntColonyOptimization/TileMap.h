#pragma once
#include <vector>
#include "Tile.h"

class TileMap
{
public:
	TileMap();
	~TileMap();

	void Render(sf::RenderWindow& window, bool grey);
	void MouseMovement(sf::Vector2f mousePos);
	void MouseClick(sf::Vector2f mousePos);
	std::vector<sf::Vector2i> GetNeighbour(sf::Vector2i tile) const;
	int GetWeight(sf::Vector2i tile);
	int Distance(sf::Vector2i start, sf::Vector2i dest) const;
	double GetPheromone(sf::Vector2i tile);
	bool GetNestPosition(sf::Vector2i& nestPos) const;
	void AddPheromone(sf::Vector2i tile, double pheromone);
	TileType GetTileType(sf::Vector2i tile);
	void Evaporation(double rho);
	void SetColorMode(bool s);

private:
	sf::Vector2i m_nest;
	sf::Vector2i m_active;

	const int m_ColCount = 50;
	const int m_RowCount = 30;
	std::vector< std::vector<Tile>> m_grid;
	bool m_color;
	Tile& TileAt(int q, int r);
	Tile& TileAt(sf::Vector2i index);
	bool Exist(sf::Vector2i index) const;

	sf::Vector2i FindMousePos(sf::Vector2f mousePos);

	const std::vector< std::vector<int>> m_Map{
		{ 1, 1, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 6, 6, 6, 6, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6 },
		{ 2, 1, 1, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 6, 6, 6, 6, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6 },
		{ 2, 2, 2, 1, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 2, 2, 6, 6, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6 },
		{ 2, 2, 2, 1, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 6, 7, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 2, 2, 2, 2, 2 },
		{ 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 2, 2, 2, 2 },
		{ 2, 2, 3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 2, 2, 2, 5, 5, 5, 2, 2, 2, 2, 2, 2, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 2, 2, 2, 2 },
		{ 2, 2, 3, 3, 3, 3, 2, 4, 4, 4, 4, 4, 1, 2, 3, 3, 5, 5, 5, 5, 5, 2, 2, 2, 2, 2, 2, 2, 2, 2, 5, 5, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 2, 2, 2 },
		{ 2, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 1, 2, 3, 5, 5, 5, 5, 5, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 2, 2, 2 },
		{ 2, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 1, 2, 5, 5, 5, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 2, 2, 2 },
		{ 2, 2, 2, 2, 2, 2, 2, 5, 5, 5, 5, 5, 1, 5, 5, 5, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 2, 2, 2, 2 },
		{ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 5, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 2, 2, 2, 2 },
		{ 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 4, 4, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 5, 5, 5, 2, 2, 2, 2, 2 },
		{ 2, 2, 2, 7, 7, 7, 7, 7, 6, 6, 6, 4, 4, 4, 4, 4, 4, 1, 2, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 2, 2, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 5, 5, 2, 2, 2, 2, 2, 2 },
		{ 2, 2, 6, 6, 6, 6, 6, 6, 6, 6, 6, 4, 4, 4, 4, 4, 4, 1, 1, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 4, 4, 5, 5, 2, 2, 2, 2, 2, 2, 2 },
		{ 2, 6, 6, 6, 6, 7, 7, 7, 6, 6, 6, 6, 4, 4, 4, 4, 2, 2, 2, 1, 6, 6, 6, 6, 6, 6, 6, 6, 6, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 5, 5, 2, 2, 2, 2, 2, 2, 2 },
		{ 2, 2, 6, 6, 7, 7, 7, 7, 7, 6, 6, 6, 6, 4, 4, 2, 2, 2, 2, 1, 1, 6, 6, 6, 6, 6, 6, 6, 6, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 5, 5, 2, 2, 2, 2, 2, 2, 2 },
		{ 2, 2, 2, 6, 6, 6, 7, 6, 6, 6, 6, 6, 4, 4, 4, 4, 2, 2, 2, 6, 6, 1, 6, 6, 6, 6, 6, 6, 6, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2 },
		{ 2, 2, 2, 6, 6, 6, 7, 6, 6, 6, 6, 6, 4, 4, 4, 4, 2, 2, 2, 6, 6, 1, 1, 1, 1, 1, 1, 1, 6, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 5, 5, 1, 1, 2, 2, 2, 2 },
		{ 2, 2, 2, 6, 6, 6, 7, 6, 6, 6, 6, 6, 4, 4, 4, 4, 2, 2, 2, 6, 6, 6, 6, 6, 6, 6, 6, 6, 1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 5, 5, 2, 2, 1, 2, 2, 2 },
		{ 2, 2, 2, 6, 6, 6, 7, 6, 6, 6, 6, 6, 4, 4, 4, 4, 2, 2, 2, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 1, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 5, 5, 2, 2, 2, 1, 2, 2, 2 },
		{ 2, 2, 2, 6, 6, 6, 7, 6, 6, 6, 6, 6, 4, 4, 4, 4, 2, 2, 2, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 5, 5, 5, 2, 2, 2, 1, 2, 2, 2 },
		{ 2, 2, 2, 6, 6, 6, 7, 6, 6, 6, 6, 6, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 5, 5, 2, 2, 2, 2, 1, 2, 2, 2, 2 },
		{ 2, 2, 2, 6, 6, 6, 7, 6, 6, 6, 6, 6, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 5, 5, 5, 2, 2, 2, 2, 1, 2, 2, 2, 2 },
		{ 2, 2, 2, 6, 6, 6, 7, 6, 6, 6, 6, 6, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 5, 5, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2 },
		{ 2, 2, 2, 6, 6, 6, 7, 6, 6, 6, 6, 6, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 5, 5, 5, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2 },
		{ 2, 2, 2, 6, 6, 6, 7, 6, 6, 6, 6, 6, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 5, 5, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2 },
		{ 2, 2, 2, 6, 6, 6, 7, 6, 6, 6, 6, 6, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 5, 5, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2 },
		{ 2, 2, 2, 6, 6, 6, 7, 6, 6, 6, 6, 6, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 5, 5, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 2, 2, 2 },
		{ 2, 2, 2, 6, 6, 6, 7, 6, 6, 6, 6, 6, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 5, 5, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2 },
		{ 2, 2, 2, 2, 2, 6, 6, 6, 2, 2, 2, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 5, 5, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1 } };
};

